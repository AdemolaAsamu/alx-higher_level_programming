This is a Python test for "adding integers.py" created for the ALx Sprint Test Development
############################################################################################

Using ``add_integer(a, b)`` found in ../0-add_integer.py
-------------------------------------------------------------------------------------------

First import the add_integer.py module from ../0-add_integer.py

	>>> import sys
	>>> sys.path.append('..')
	>>> add_integer = __import__("0-add_integer").add_integer

Now, use it:

###Testing against a float value
	>>> add_integer(12.0, 10)
	22
	
	>>> add_integer(0, 0)
	0

### Testing against non int or float value
	>>> add_integer('bas', 6)

	Traceback (most recent call last):
  	...
	TypeError: a must be an integer

	>>> add_integer(6, 'bas')
	
	Traceback (most recent call last):
  	...
	TypeError: b must be an integer


###Testing against Nove Value
	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

### Testing against Floating infinity
	>>>add_integer(100e999)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
